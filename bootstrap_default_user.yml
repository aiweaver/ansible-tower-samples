---
# Add pdo user on remote machines
- hosts: all
  tasks:
  - name: Ensure group "sktaic" exists
    become: yes
    group:
      name: sktaic
      state: present
  - name: Add SKT AIC Default User
    become: yes
    user:
      name: dmig
      comment: "SKT AIC-DIMG Default User"
      shell: /bin/bash
      groups: wheel,sktaic
      system: no             # Defaults to no
      createhome: yes        # Defaults to yes
      append: yes
      generate_ssh_key: no
      ## run command below ##
      ## python -c 'import crypt,getpass; print crypt.crypt(getpass.getpass())' ##
      ## to create your own encrypted password ##
      password: $6$THq.nclQOyxgi21R$19Ds0oSUpo1hFaYasqi7nGlmu1X0egSWjLjSly8Ki/6YyiM9glYUwCA8x/Pqsbcda3tGbFNRfhXu.MOsYC3Py1
      ## ssh_key_type: ed25519

  - name: Add provision user to the sudoers
    become: yes
    copy:
      dest: "/etc/sudoers.d/dmig"
      content: "dmig  ALL=(ALL)  NOPASSWD: ALL"

- hosts: console.aiweaver.net
  ## connection: local
  gather_facts: no
  ## remote_user: dmig
  become: true
  become_user: dmig
  become_method: su
  tasks:
  - name: remove existing ssh_host keys
    local_action: file dest="~/.ssh/{{ item }}" state=absent
    with_items:
      - id_rsa
      - id_rsa.pub

  - name: Creating pub SSH keys
    ## command: ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa
    command : ssh-keygen -q -t rsa -f ~/.ssh/id_rsa -C "" -N ""
    creates: ~/.ssh/id_rsa
    ## become: yes
    ## become_user: dmig
    ## become_method: su
  
# Install public key into remote machine    
- hosts: all
  vars:
    - authorized_key:
            user: dmig
            state: present
            manage_dir: yes
            key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
            # key: "{{ lookup('file', '/home/dmig/.ssh/id_ed25519.pub') }}"                        
  roles:
  - { role: GROG.authorized-key, become: yes }

# Add sudo privileges for dmig user
- hosts: all
  roles:
  - { role: GROG.sudo, become: yes }
